<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Configuration -->
  
  <PropertyGroup Label="Configuration">
   <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
   <Platform Condition=" '$(Platform)' == '' ">x64</Platform>
  </PropertyGroup>

  <!-- 
  <ItemGroup>
    <deployFiles Include=".\deploy\**\*.*" Exclude=""/>
  </ItemGroup>
  -->

  <Target Name="Configure">
    <XmlPeek XmlInputPath="$([System.IO.Path]::GetFileName('$(MSBuildProjectDirectory)')).vcxproj" Query="s:Project/s:PropertyGroup[@Label='Globals']/s:RootNamespace/text()"
        Namespaces="&lt;Namespace Prefix='s' Uri='http://schemas.microsoft.com/developer/msbuild/2003' /&gt;">
      <Output TaskParameter="Result" PropertyName="ProjectName" Condition="$(ProjectName) == ''" />
    </XmlPeek>
    <XmlPeek XmlInputPath="$([System.IO.Path]::GetFileName('$(MSBuildProjectDirectory)')).vcxproj" Query="s:Project/s:PropertyGroup[@Label='Globals']/s:ProjectGuid/text()"
        Namespaces="&lt;Namespace Prefix='s' Uri='http://schemas.microsoft.com/developer/msbuild/2003' /&gt;">
      <Output TaskParameter="Result" PropertyName="ProjectGuid" Condition="$(ProjectGuid) == ''" />
    </XmlPeek>
    <XmlPeek XmlInputPath="$([System.IO.Path]::GetFileName('$(MSBuildProjectDirectory)')).vcxproj" Query="s:Project/s:PropertyGroup[@Condition=&quot;&apos;%24(Configuration)|%24(Platform)&apos;==&apos;$(Configuration)|$(Platform)&apos;&quot; and @Label='Configuration']/s:ConfigurationType/text()"
        Namespaces="&lt;Namespace Prefix='s' Uri='http://schemas.microsoft.com/developer/msbuild/2003' /&gt;">
      <Output TaskParameter="Result" PropertyName="ProjectType" Condition="$(ProjectType) == ''" />
    </XmlPeek>

    <PropertyGroup Label="DynamicConfiguration">

      <mtlgen Condition="$(mtlgen)==''">$(MSBuildThisFileDirectory)\..\..\..\bin\mtlgen.exe</mtlgen>
      <ProjectType Condition="'$(ProjectType)'=='Application'">.exe</ProjectType>
      <ProjectType Condition="'$(ProjectType)'=='DynamicLibrary'">.dll</ProjectType>

      <version>$([System.DateTime]::Now.ToString("yy.MM.dd.HH"))</version>

      <installPrefix Condition="$(installPrefix)==''">..</installPrefix>

      <confPath Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">$(installPrefix)\Debug</confPath>
      <confPath Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">$(installPrefix)\Release</confPath>
      <confPath Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">$(installPrefix)\x64\Debug</confPath>
      <confPath Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">$(installPrefix)\x64\Release</confPath>

      <outpath>$(MSBuildProjectDirectory)\$(confPath)\$(ProjectName)$(ProjectType)</outpath>
      <binPath>$([MSBuild]::NormalizePath('$(outPath)'))</binPath>

      <arch Condition=" '$(Platform)' == 'x64' ">x64</arch>
      <arch Condition=" '$(Platform)' == 'Win32' ">x86</arch>

      <!-- wix ui helper dll-->
      <uiext>$(WIX)\bin\WixUIExtension.dll</uiext>

      <!-- output target -->
      <msiTarget>$(confPath)\$(projectName)Setup.msi</msiTarget>

      <manufacturer Condition="'$(manufacturer)' == ''">$(projectName)</manufacturer>
      <upgradeUuid Condition="'$(upgradeUuid)' == ''">$(ProjectGuid)</upgradeUuid>

    </PropertyGroup>
  </Target>
  


 <!-- make installer setup MSI package -->
 <Target Name="Setup" DependsOnTargets="Configure;Clean">

	<Message Text="building Wix Installer $(projectName)" />
	<Message Text="Project Configuration = $(Configuration)" />
	<Message Text="Project Platform = $(Platform)" />
	<Message Text="$(MSBuildProjectDirectory)" />

  <MakeDir Directories="wixobj"/>
  <MakeDir Directories="deploy"/>

   <!-- wix heat -->
  <Exec Command='"$(WIX)\bin\heat.exe" dir .\deploy -srd -scom -sw5150 -sw5151 -gg -cg "DeployCom$(projectName)" -dr COMPATH -var var.SourceDir  -o "deploy.wxs"' WorkingDirectory="."/>

   <!-- wix candle -->
  <Exec Command='"$(WIX)\bin\candle.exe" -o "wixobj\fragment.wixobj" fragment.wxs -dSourceDir="$(confPath)" -dBuildArch=$(arch) -ext "$(uiext)" -arch $(arch)' WorkingDirectory="."/>
  <Exec Command='"$(WIX)\bin\candle.exe" -o "wixobj\setup.wixobj" "res\setup.wxs" -dVENDORUUID="$(vendorUuid)" -dUPGRADEUUID="$(upgradeUuid)" -dMANUFACTURER="$(manufacturer)" -dprojectName=$(projectName) -dVERSION=$(version) -dSourceDir="$(confPath)" -dBuildArch=$(arch) -ext "$(uiext)" -arch $(arch)' WorkingDirectory="."/>
  <Exec Command='"$(WIX)\bin\candle.exe" -o "wixobj\mondo.wixobj" "res\MondoNoLicense.wxs" -dVERSION=$(version) -dSourceDir=".\deploy" -dBuildArch=$(arch) -ext "$(uiext)" -arch $(arch)' WorkingDirectory="."/>
  <Exec Command='"$(WIX)\bin\candle.exe" -o "wixobj\deploy.wixobj" "deploy.wxs" -dVERSION=$(version) -dSourceDir=".\deploy" -dBuildArch=$(arch) -ext "$(uiext)" -arch $(arch)' WorkingDirectory="."/>

   <!-- wix light -->
	<Exec Command='"$(WIX)\bin\light.exe" -ext "$(uiext)" -out "$(msiTarget)" -cultures:en-us -loc "res\en-us.wxl" "wixobj\deploy.wixobj" "wixobj\fragment.wixobj"  "wixobj\setup.wixobj" "wixobj\mondo.wixobj"' WorkingDirectory="."/>

 </Target>

 <!-- generate registry files for developer quick registration -->
 <Target Name="RegGen" DependsOnTargets="Configure">
  <Exec Command='"$(mtlgen)" reg $(arch) $(apartment) "$(binPath)" "$(projectName).idl" >  "$(projectName).reg" ' WorkingDirectory="."/>
  <Exec Command='"$(mtlgen)" unreg "$(projectName).idl" >  "$(projectName)-unreg.reg" ' WorkingDirectory="."/>
 </Target>

 <!-- developer quick COM registration -->
 <Target Name="Reg" DependsOnTargets="Configure;RegGen">
  <Exec Command='"$(projectName).reg"' WorkingDirectory="."/>
 </Target>

 <!-- developer quick COM un-registration -->
 <Target Name="UnReg"  DependsOnTargets="Configure">
  <Exec Command='"$(projectName)-unreg.reg"' WorkingDirectory="."/>
 </Target>


  <!-- wix object files to delete on clean -->
  <ItemGroup>
    <FilesToDelete Include=".\wixobj\*.wixobj;deploy.wxs"/>
  </ItemGroup>
  
 <!-- Clean -->
 <Target Name="Clean" DependsOnTargets="Configure">
  <Delete Files="$(msiTarget)" />
  <Delete Files="@(FilesToDelete)" />
 </Target>

 <!-- test the midlparser -->
 <Target Name="Show" DependsOnTargets="Configure">
  <Exec Command='"$(mtlgen)" show "$(projectName).idl" ' WorkingDirectory="."/>
 </Target>

 <!-- generate a dispid.h file from midl -->
 <Target Name="Disp" DependsOnTargets="Configure">
  <Exec Command='"$(mtlgen)" disp "$(projectName).idl" > dispids.h ' WorkingDirectory="."/>
 </Target>

 <!-- generate a wix fragment for COM registration in msi installer -->
 <Target Name="Fragment" DependsOnTargets="Configure">

   <PropertyGroup>
     <Isolated Condition="$(Isolated)==''">False</Isolated>
     <Isolated Condition="$(Isolated)">iso</Isolated>
   </PropertyGroup>

   <Exec Condition="Exists('$(projectName).idl')" Command='"$(mtlgen)" wix $(arch) $(apartment) $(Isolated) "$(projectName)$(ProjectType)" "$(projectName).idl" > fragment.wxs ' WorkingDirectory="."/>
   <Exec Condition="!Exists('$(projectName).idl')" Command='"$(mtlgen)" wix $(arch) $(apartment) $(Isolated) "$(projectName)$(ProjectType)" > fragment.wxs ' WorkingDirectory="."/>
 </Target>
  
 <Target Name="SelfReg" DependsOnTargets="Configure">
   <Exec Command='"$(mtlgen)" selfreg $(arch) $(apartment) "$(binPath)" "$(projectName).idl" > reg.cpp ' WorkingDirectory="."/>
 </Target>


 <Target Name="Def" DependsOnTargets="Configure">
   <Exec Command='"$(mtlgen)" def "$(projectName).idl" > $(projectName).def ' WorkingDirectory="."/>
 </Target>



  
  <!-- generate fragment and build msi installer in one go -->
 <Target Name="Package" DependsOnTargets="Clean;Setup" />

  <Target Name="Test" DependsOnTargets="Configure">
    <Message Text="projectName $(projectName)" />
    <Message Text="Project Configuration = $(Configuration)" />
    <Message Text="Project Platform = $(Platform)" />
    <Message Text="dir: $(MSBuildProjectDirectory)" />
    <Message Text="file: $(MSBuildProjectFile)" />

    <Message Text="path: $(MSBuildProjectFullPath)" />
    <Message Text="name: $(MSBuildProjectName)" />
    <Message Text="start: $(MSBuildStartupDirectory)" />

    <Message Text="thisflle: $(MSBuildThisFile)" />
    <Message Text="thisflleDir: $(MSBuildThisFileDirectory)" />
    <Message Text="thisfllePath: $(MSBuildThisFileFullPath)" />
    <Message Text="thisflleName: $(MSBuildThisFileName)" />

    <Message Text="XXX: $([System.IO.Path]::GetFileName('$(MSBuildProjectDirectory)'))" />
    <Message Text="thisflleName: $(MSBuildThisFileName)" />

    <Message Text="PROJECT: $(ProjectName)" />
    <Message Text="GUID: $(ProjectGuid)" />
    <Message Text="PROJECT: $(ProjectType)" />

    <Message Text="PROJECT: $(mtlgen)" />

    <Message Text="confPath: $(confPath)" />
    <Message Text="binPath: $(binPath)" />

    

  </Target>

  <Target Name="Isolate" DependsOnTargets="Configure">

    <ItemGroup>
      <deps Include="$(Projects)" />
    </ItemGroup>

    <PropertyGroup>
      <identityVersion Condition="$(entityVersion)==''">1.0.0.0</identityVersion>
      <manifests Condition="$(Projects)!=''">"@(deps->'$(installPrefix)\%(filename)\%(filename).manifest', '" "')"</manifests>
      <midl Condition="Exists('$(projectName).idl')">"$(projectName).idl"</midl>
      <midl Condition="!Exists('$(projectName).idl')">""</midl>
    </PropertyGroup>

    <Message Text="manPath: $(manifests)" />
<!--
    <Exec Condition="$(ProjectType)=='.dll'" Command='"$(mtlgen)" wix $(arch) $(apartment) "$(projectName)$(ProjectType)" > fragment.wxs ' WorkingDirectory="."/>
    <Exec Condition="$(ProjectType)=='.exe'" Command='"$(mtlgen)" wix $(arch) $(apartment) "$(projectName)$(ProjectType)" > fragment.wxs ' WorkingDirectory="."/>
-->
    <Exec Condition="$(ProjectType)=='.dll'" Command='"$(mtlgen)" isolate "$(arch)" "$(apartment)" "$(identityVersion)" "$(projectName).dll" $(midl) $(manifests) > $(projectName).manifest ' WorkingDirectory="."/>
    <Exec Condition="$(ProjectType)=='.exe'" Command='"$(mtlgen)" isolate "$(arch)" "$(apartment)" "$(identityVersion)" "$(projectName).exe" $(midl) $(manifests) > $(projectName).manifest ' WorkingDirectory="."/>

  </Target>

  
  </Project>
